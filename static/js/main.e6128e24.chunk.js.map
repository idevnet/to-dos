{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","title","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","completed","key","slice","TodoList","initialState","JSON","parse","localStorage","getItem","setTodos","axios","get","then","res","responseTodos","data","storedData","console","log","setItem","stringify","updatedTodos","removedArr","filter","todoId","newValue","test","prev","item","newTodos","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6128e24.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      title: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className=\"btn add-task-btn btn-update\">\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className=\"btn add-task-btn\">\n            + Add task\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.completed ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        <button className=\"btn-circle task-btn\">\n        <i className=\"fa fa-circle-o\"></i></button>\n        {todo.title.slice(0, 23)}\n        \n      </div>\n      <div className='icons'>\n       \n        <button className=\"btn-edit task-btn\" onClick={() => setEdit({ id: todo.id, value: todo.title })}>\n          <i className=\"fa fa-pencil\"></i>\n        </button>\n        <button className=\"btn-delete task-btn\" onClick={() => removeTodo(todo.id)}>\n        <i className=\"fa fa-trash-o\"></i>\n        </button>\n        \n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport axios from 'axios';\n\nfunction TodoList() {\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n  const [todos, setTodos] = useState(initialState);\n\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/todos?_limit=20`).then((res) => {\n      const responseTodos = res.data;\n\n      const storedData = localStorage.getItem(\"tasks\")\n      if (storedData) {\n        //Data item exists, mogu se editovati sa podacima iz State varijable \"todos\"\n        console.log(`Local storage is Not Empty = ${storedData}`);\n        console.log(`Local State is Not Empty = ${todos}`);\n\n        localStorage.setItem(\"tasks\", JSON.stringify(todos));\n        \n      } else {\n        //Data item doesn't exist in localStorage, API response se onda setuje u localStorage\n        console.log('Local storage is Empty');\n        localStorage.setItem(\"tasks\", JSON.stringify(responseTodos));\n        setTodos(responseTodos);\n      }\n      \n    });\n  }, [todos]);\n//Kod svake promjene u State varijabli \"todos\" poziva se useEffect()\n \n  const addTodo = todo => {\n    if (!todo.title || /^\\s*$/.test(todo.title)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.title || /^\\s*$/.test(newValue.title)) {\n      //Provjera ispravnosti unosa\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <div className='todo-header'>\n      <button className=\"btn-navicon task-btn\">\n        <i className=\"fa fa-navicon\"></i></button>\n        <h1>My To-do List</h1></div>\n      \n      <div className='todo-list-container'>\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n      <TodoForm onSubmit={addTodo} />\n      </div>\n    </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n \n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}